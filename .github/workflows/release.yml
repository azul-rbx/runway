name: Release

on:
  push:
    tags: ["*"]

defaults:
  run:
    shell: bash
    
permissions:
  contents: write

jobs:
  init:
    name: Init
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.value }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version from manifest
        uses: SebRollen/toml-action@9062fbef52816d61278d24ce53c8070440e1e8dd
        id: get_version
        with:
          file: Cargo.toml
          field: package.version

  build:
    needs: ["init"]
    strategy:
      fail-fast: true 
      matrix:
        include:
          - runner: windows-xlarge
            artifact: runway-${{ needs.init.outputs.version }}-windows-x86_64
            target: x86_64-pc-windows-msvc
          - runner: ubuntu-xlarge
            artifact: runway-${{ needs.init.outputs.version }}-linux-x86_64
            target: x86_64-unknown-linux-gnu
          - runner: macos-latest
            artifact: runway-${{ needs.init.outputs.version }}-macos-aarch64
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.runner }}
    name: Build (${{ matrix.target }})
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3
      - run: cargo build --locked --release --target ${{ matrix.target }}
      - if: matrix.target == 'x86_64-pc-windows-msvc'
        run: |
          mkdir out
          cp "target/${{ matrix.target }}/release/runway.exe" out/
      - if: matrix.target != 'x86_64-pc-windows-msvc'
        run: |
          mkdir out
          cp "target/${{ matrix.target }}/release/runway" out/
      - run: |
          7z a out.zip out/*
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: out.zip
      - name: Print sccache statistics
        shell: bash
        run: ${SCCACHE_PATH} --show-stats
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: ["init", "build"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: releases
          pattern: runway-*
      - run: |
         ls -alR ./releases
         pushd ./releases
         find . -name 'runway-*' -exec sh -c 'mv {}/out.zip ${GITHUB_WORKSPACE}/$(basename {}).zip' \;
         popd
      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ needs.init.outputs.version }}
          tag_name: v${{ needs.init.outputs.version }}
          fail_on_unmatched_files: true
          files: "*.zip"
          draft: true